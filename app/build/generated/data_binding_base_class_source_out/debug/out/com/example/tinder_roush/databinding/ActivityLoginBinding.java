// Generated by view binder compiler. Do not edit!
package com.example.tinder_roush.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tinder_roush.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonForgotPassword;

  @NonNull
  public final Button buttonLogin;

  @NonNull
  public final Button buttonMakeAccount;

  @NonNull
  public final Button buttonPrivacyPolitic;

  @NonNull
  public final Button buttonTermsUse;

  @NonNull
  public final EditText fieldEmail;

  @NonNull
  public final EditText fieldPassword;

  @NonNull
  public final ConstraintLayout loginView;

  @NonNull
  public final ImageView logo;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonForgotPassword, @NonNull Button buttonLogin,
      @NonNull Button buttonMakeAccount, @NonNull Button buttonPrivacyPolitic,
      @NonNull Button buttonTermsUse, @NonNull EditText fieldEmail, @NonNull EditText fieldPassword,
      @NonNull ConstraintLayout loginView, @NonNull ImageView logo) {
    this.rootView = rootView;
    this.buttonForgotPassword = buttonForgotPassword;
    this.buttonLogin = buttonLogin;
    this.buttonMakeAccount = buttonMakeAccount;
    this.buttonPrivacyPolitic = buttonPrivacyPolitic;
    this.buttonTermsUse = buttonTermsUse;
    this.fieldEmail = fieldEmail;
    this.fieldPassword = fieldPassword;
    this.loginView = loginView;
    this.logo = logo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_forgot_password;
      Button buttonForgotPassword = ViewBindings.findChildViewById(rootView, id);
      if (buttonForgotPassword == null) {
        break missingId;
      }

      id = R.id.button_login;
      Button buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.button_make_account;
      Button buttonMakeAccount = ViewBindings.findChildViewById(rootView, id);
      if (buttonMakeAccount == null) {
        break missingId;
      }

      id = R.id.button_privacy_politic;
      Button buttonPrivacyPolitic = ViewBindings.findChildViewById(rootView, id);
      if (buttonPrivacyPolitic == null) {
        break missingId;
      }

      id = R.id.button_terms_use;
      Button buttonTermsUse = ViewBindings.findChildViewById(rootView, id);
      if (buttonTermsUse == null) {
        break missingId;
      }

      id = R.id.field_email;
      EditText fieldEmail = ViewBindings.findChildViewById(rootView, id);
      if (fieldEmail == null) {
        break missingId;
      }

      id = R.id.field_password;
      EditText fieldPassword = ViewBindings.findChildViewById(rootView, id);
      if (fieldPassword == null) {
        break missingId;
      }

      ConstraintLayout loginView = (ConstraintLayout) rootView;

      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, buttonForgotPassword,
          buttonLogin, buttonMakeAccount, buttonPrivacyPolitic, buttonTermsUse, fieldEmail,
          fieldPassword, loginView, logo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
